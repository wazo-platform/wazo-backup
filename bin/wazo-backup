#!/bin/sh
# Copyright 2015-2021 The Wazo Authors  (see the AUTHORS file)
# SPDX-License-Identifier: GPL-3.0-or-later

PATH=/usr/sbin:/usr/bin:/sbin:/bin
BACKUP_TYPE=$1
if [ -z "${BACKUP_TYPE}" ]; then
    echo "Please give backup type" >&2
    exit 1
fi
BACKUP_FILE=$2
if [ -z "${BACKUP_FILE}" ]; then
    echo "Please give backup file" >&2
    exit 1
fi

renice 19 "$$" >/dev/null
ionice -c 3 -p "$$"

[ -e /etc/xivo/common.conf ] && . /etc/xivo/common.conf
DEFAULT_MAX_SOUND_FILE_SIZE=10M
DEFAULT_MAX_FILES_PER_SOUND_DIR=100
WAZO_VERSION="$(cat /usr/share/wazo/WAZO-VERSION 2>/dev/null || echo 'unknown')"
BACKUP_FILE=${BACKUP_FILE}.tgz


case "${BACKUP_TYPE}" in
  data)
    BACKUP_LIST="/etc/asterisk/
                 /etc/consul/
                 /etc/crontab
                 /etc/dahdi/
                 /etc/dhcp/
                 /etc/hostname
                 /etc/hosts
                 /etc/ldap/
                 /etc/network/if-up.d/xivo-routes
                 /etc/network/interfaces
                 /etc/ntp.conf
                 /etc/profile.d/xivo_uuid.sh
                 /etc/resolv.conf
                 /etc/ssl/
                 /etc/systemd/
                 /etc/wanpipe/
                 /etc/wazo-agentd/
                 /etc/wazo-agid/
                 /etc/wazo-amid/
                 /etc/wazo-auth/
                 /etc/wazo-call-logd/
                 /etc/wazo-calld/
                 /etc/wazo-confd/
                 /etc/wazo-confgend-client/
                 /etc/wazo-chatd/
                 /etc/wazo-dird/
                 /etc/wazo-dxtora/
                 /etc/wazo-phoned/
                 /etc/wazo-plugind/
                 /etc/wazo-purge-db/
                 /etc/wazo-webhookd/
                 /etc/wazo-websocketd/
                 /etc/xivo/
                 /root/.config/wazo-auth-cli/
                 /usr/local/bin/
                 /usr/local/sbin/
                 /usr/local/share/
                 /usr/share/wazo/WAZO-VERSION
                 /var/lib/asterisk/
                 /var/lib/consul/
                 /var/lib/wazo-auth-keys/
                 /var/lib/wazo-provd/
                 /var/lib/wazo/
                 /var/log/asterisk/
                 /var/spool/asterisk/
                 /var/spool/cron/crontabs/"
    FILTER_DIRS="/var/lib/wazo/sounds
                 /var/lib/asterisk/sounds/custom
                 /var/lib/asterisk/moh
                 /var/spool/asterisk/voicemail
                 /var/spool/asterisk/monitor"
    EXCLUDE_FILES="/var/lib/asterisk/astdb.sqlite3-journal
                   /var/lib/consul/checks
                   /var/lib/consul/raft
                   /var/lib/consul/serf
                   /var/lib/consul/services
                   /var/lib/wazo-provd/plugins/*/var/cache/*
                   /var/lib/wazo-provd/plugins/xivo-polycom*/var/tftpboot/*.ld
                   /var/spool/asterisk/monitor"

    # backup existing directories only
    WOULD_BACKUP=
    for FILE in ${BACKUP_LIST}; do
        if [ -e "/${FILE}" ]; then
            WOULD_BACKUP="${WOULD_BACKUP} ${FILE}"
        fi
    done

    # exclude files from backup
    EXCL_FILE=$(mktemp)
    for FILE in ${EXCLUDE_FILES}; do
        if [ -e ${FILE} ]; then
            echo ${FILE} >>${EXCL_FILE}
        fi
    done
    # filter out known heavy logs
    ls /var/log/asterisk/debug* >>${EXCL_FILE} 2>/dev/null
    ls /var/log/asterisk/full* >>${EXCL_FILE} 2>/dev/null
    # filter out core files
    ls /var/spool/asterisk/core.* >>${EXCL_FILE} 2>/dev/null
    # filter out heavy sound files
    MAX_SIZE=${XIVO_BACKUP_MAX_SOUND_FILE_SIZE:-${DEFAULT_MAX_SOUND_FILE_SIZE}}
    find ${FILTER_DIRS} -type f -size +${MAX_SIZE} -print >>${EXCL_FILE} 2>/dev/null
    # filter out sound directories with too much files
    MAX_FILES=${XIVO_BACKUP_MAX_FILES_PER_SOUND_DIR:-${DEFAULT_MAX_FILES_PER_SOUND_DIR}}
    for D in $(find ${FILTER_DIRS} -mindepth 1 -type d 2>/dev/null); do
        COUNT=$(ls -1A ${D} | wc -l)
        if [ ${COUNT} -gt ${MAX_FILES} ]; then
            echo ${D} >>${EXCL_FILE}
        fi
    done
    # remove leading slash in exclud list ...
    sed -i -r 's#(^| )/#\1#g' ${EXCL_FILE}

    # ... as well as in backup list
    TAR_WOULD_BACKUP=$(echo "${WOULD_BACKUP}" | sed -r 's#(^| )/#\1#g')
    tar cpzf ${BACKUP_FILE} -C / --exclude-from=${EXCL_FILE} --ignore-failed-read --warning=no-file-changed ${TAR_WOULD_BACKUP} >/dev/null

    rm -rf ${EXCL_FILE}
    ;;
  db)
    TMPDIR=$(mktemp -d)
    PG_DIR=pg-backup
    PG_TMPDIR=${TMPDIR}/${PG_DIR}
    mkdir ${PG_TMPDIR}

    cd /var/lib/postgresql
    sudo -u postgres pg_dump -Fc \
        --exclude-table-data=auth_acl \
        --exclude-table-data=auth_token \
        asterisk > ${PG_TMPDIR}/asterisk-${WAZO_VERSION}.dump
    if [ $? -ne 0 ]; then
        (>&2 echo "error while dumping the asterisk DB")
        exit 1
    fi
    cd ${OLDPWD}

    tar cpzf ${BACKUP_FILE} -C ${TMPDIR} ${PG_DIR}
    rm -r ${TMPDIR}
    ;;
  *)
    echo "Unknown backup type" >&2
    exit 1
    ;;
esac
